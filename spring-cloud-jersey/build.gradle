buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
        springCloudVersion = 'Dalston.SR4'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
	}
	configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
		compile.exclude module: "jsr311-api"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'com.meiaida'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}



springBoot {
  //  requiresUnpack = ['com.wordnik:swagger-jersey2-jaxrs_2.10']
  //  mainClass = "com.jyall.sbeco.routine.web.RoutineWebApplication"
}
dependencies {
//	compile('org.springframework.cloud:spring-cloud-starter-eureka'){
//		exclude module:'com.sun.jersey:jersey-client'
//		exclude module:'com.sun.jersey:jersey-core'
//		exclude module:'com.sun.jersey.contribs:jersey-apache-client4'
//	}
    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-web')
//	compile('io.springfox:springfox-swagger-ui:2.4.0')
//	compile('io.springfox:springfox-swagger2:2.4.0')
//	compile('io.springfox:springfox-spi:2.4.0')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.cloud:spring-cloud-starter-feign')
	compile("com.wordnik:swagger-jersey2-jaxrs_2.11:1.3.11") {
		exclude(module: 'jsr311-api')
	}
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
jar {
	String someString = ''
	configurations.runtime.each {someString = someString + " lib\\"+it.name} //遍历项目的所有依赖的jar包赋值给变量someString
	manifest {
		attributes 'Main-Class': 'com.meiaida.jersey.SpringCloudJerseyApplication'
		attributes 'Class-Path': someString
	}
}
task copyJar(type:Copy){
	from configurations.runtime
	into ('build/libs/lib')

}

task release(type: Copy,dependsOn: [build,copyJar]) {
//    from  'conf'
	//   into ('build/libs/eachend/conf')
}